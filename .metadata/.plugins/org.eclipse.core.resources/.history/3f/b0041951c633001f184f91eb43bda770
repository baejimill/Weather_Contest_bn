package edu.pnu.domain;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "member")
public class Member {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	
	private String username;
	
	@Column(unique = true)
	private String email;
	
	private String password;
	private String role;  //USER or ADMIN
	
	@Builder.Default
	@Column(name = "join_date")
	private LocalDateTime joinDate = LocalDateTime.now();

	 // 새로 추가된 부분: Member와 Question의 관계 정의  여기부분 때문에 로그인 오류 생김!!ㅜㅜ
    @OneToMany(mappedBy = "member")
    private List<Question> questions;

    // questions 필드의 getter 메서드
    public List<Question> getQuestions() {
        return questions;
	}
    
    @ManyToMany // log 에서는 hscode 테이블 정보가 필요하지만 hscode 테이블에서는 log 테이블 정보가 필요없어서 hscode 테이블에서는 many to many 어노테이션을 사용하지 않음.
    @JoinTable(
        name = "member_data", // jointable 의 이름
        joinColumns = @JoinColumn(name = "member_id"), //log 테이블(이쪽)의 id 를 필드값으로 넣겠다. 
        inverseJoinColumns = @JoinColumn(name = "data_id") //hscode 테이블(저쪽)의 hscode 를 필드값으로 넣겠다.
    )
    //Set 순서는 상관없지만 중복된 값이 없도록 해줌. => 이로 인해서 결과값으로 중복된 hscode값이 안나오는 거임. (list, map, set) 이 있음.
    private Set<Feature> data;

}
