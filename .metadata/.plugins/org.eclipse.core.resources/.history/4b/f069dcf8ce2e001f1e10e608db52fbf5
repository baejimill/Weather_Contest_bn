package edu.pnu.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import edu.pnu.DTO.FeatureDTO;
import edu.pnu.persistence.FeatureRepository;

@Service
public class FeatureService {
    @Autowired
    private FeatureRepository featureRepository;

    public List<FeatureDTO> findFeatures(String stn4contest, String efYear, String efMonth, String efDay, String efHour) {
        List<FeatureDTO> ret = new ArrayList<>();
        List<Object[]> list = featureRepository.findFeatures(stn4contest, efYear, efMonth, efDay, efHour);

        for (Object[] arr : list) {
            FeatureDTO f = new FeatureDTO();
            f.setFc_year((String) arr[0]);
            f.setFc_month((Long) arr[1]);
            f.setFc_day((Long) arr[2]);
            f.setFc_hour((Long) arr[3]);
            f.setStn4contest((String) arr[4]);
            f.setDh((Long) arr[5]);
            f.setEf_year((String) arr[6]);
            f.setEf_month((Long) arr[7]);
            f.setEf_day((Long) arr[8]);
            f.setEf_hour((Long) arr[9]);
            f.setV01((Long) arr[10]);
            f.setV02((Long) arr[11]);
            f.setV03((Long) arr[12]);
            f.setV04((Long) arr[13]);
            f.setV05((Long) arr[14]);
            f.setV06((Long) arr[15]);
            f.setV07((Long) arr[16]);
            f.setV08((Long) arr[17]);
            f.setV09((Long) arr[18]);

            ret.add(f);
        }
        return ret;
    }
    public String sendFeaturesToFlask(List<FeatureDTO> features) {
        RestTemplate restTemplate = new RestTemplate();
        String flaskUrl = "http://flask-server-url/endpoint"; // 플라스크 서버 URL로 변경
        ResponseEntity<String> flaskResponse = restTemplate.postForEntity(flaskUrl, features, String.class);

        // 플라스크 응답 처리 (필요한 경우)
        System.out.println("Flask response: " + flaskResponse.getBody());

        return flaskResponse.getBody();
    }
}


